package edu.ncsu.csc216.todolist.model;

import java.util.Date;
import java.util.Observable;
import java.util.Observer;

public class Task extends Observable implements Comparable<Task>  {
	
	private static final long serialVersionUD = 7459L;
	private String title;
	private String details;
	private Date startDateTime;
	private Date dueDateTime;
	private Date completedDateTime;
	private boolean completed;
	private String taskID;
	private Category category;
	
	public Task(String title, String details, Date start, Date due, Category cat, String id){
		this.title = title;
		this.details = details;
		this.startDateTime = start;
		this.dueDateTime = due;
		this.taskID = id;
		this.category = cat;
	}
	
	public String getTitle(){
		return title;
	}
	
	public void setTitle(String title){
		this.title = title;
	}
	
	public String getDetails(){
		return details;
	}
	
	public void setDetails(String details){
		this.details = details;
	}
	
	public  Date getDueDateTime(){
		return dueDateTime;
	}
	
	public void setDueDateTime(Date start){
		this.dueDateTime = start;
	}
	
	public  Date getStartDateTime(){
		return startDateTime;
	}
	
	public void setStartDateTime(Date start){
		this.startDateTime = start;
	}
	
	public  Date getCompletedDateTime(){
		return completedDateTime;
	}
	
	public void setCompletedDateTime(Date start){
		this.completedDateTime = start;
	}
	
	public boolean isCompleted(){
		return completed;
	}
	
	public void setCompleted(boolean comp){
		this.completed = comp;
	}
	
	public void setCategory(Category c){
		this.category = c;
	}
	
	public Category getCategory(){
		return category;
	}
	
	public String getTaskID(){
		return taskID;
	}
	
	/* (non-Javadoc)
	 * @see java.lang.Object#hashCode()
	 */
	@Override
	public int hashCode() {
		final int prime = 31;
		int result = 1;
		result = prime * result
				+ ((category == null) ? 0 : category.hashCode());
		result = prime * result + (completed ? 1231 : 1237);
		result = prime
				* result
				+ ((completedDateTime == null) ? 0 : completedDateTime
						.hashCode());
		result = prime * result + ((details == null) ? 0 : details.hashCode());
		result = prime * result
				+ ((dueDateTime == null) ? 0 : dueDateTime.hashCode());
		result = prime * result
				+ ((startDateTime == null) ? 0 : startDateTime.hashCode());
		result = prime * result + ((taskID == null) ? 0 : taskID.hashCode());
		result = prime * result + ((title == null) ? 0 : title.hashCode());
		return result;
	}

	/* (non-Javadoc)
	 * @see java.lang.Object#equals(java.lang.Object)
	 */
	@Override
	public boolean equals(Object obj) {
		if (this == obj)
			return true;
		if (obj == null)
			return false;
		if (getClass() != obj.getClass())
			return false;
		Task other = (Task) obj;
		if (category == null) {
			if (other.category != null)
				return false;
		} else if (!category.equals(other.category))
			return false;
		if (completed != other.completed)
			return false;
		if (completedDateTime == null) {
			if (other.completedDateTime != null)
				return false;
		} else if (!completedDateTime.equals(other.completedDateTime))
			return false;
		if (details == null) {
			if (other.details != null)
				return false;
		} else if (!details.equals(other.details))
			return false;
		if (dueDateTime == null) {
			if (other.dueDateTime != null)
				return false;
		} else if (!dueDateTime.equals(other.dueDateTime))
			return false;
		if (startDateTime == null) {
			if (other.startDateTime != null)
				return false;
		} else if (!startDateTime.equals(other.startDateTime))
			return false;
		if (taskID == null) {
			if (other.taskID != null)
				return false;
		} else if (!taskID.equals(other.taskID))
			return false;
		if (title == null) {
			if (other.title != null)
				return false;
		} else if (!title.equals(other.title))
			return false;
		return true;
	}
	

	@Override
	public int compareTo(Task o) {
		return startDateTime.compareTo(o.getStartDateTime());
		
	}
}
